name: Build Flutter APK

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-apk:
    runs-on: ubuntu-latest

    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      FLUTTER_ROOT: /opt/hostedtoolcache/flutter/stable
      PUB_CACHE: /home/runner/.pub-cache

    steps:
      # Checkout repo
      - uses: actions/checkout@v4

      # Setup Flutter
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.3"

      # Install Android SDK command line tools
      - name: Install Android SDK
        run: |
          mkdir -p $ANDROID_HOME/cmdline-tools
          curl -o commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip -q commandlinetools.zip -d $ANDROID_HOME/cmdline-tools
          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH
          yes | sdkmanager --sdk_root=$ANDROID_HOME --licenses
          sdkmanager --sdk_root=$ANDROID_HOME "platform-tools" "platforms;android-36" "build-tools;36.0.0"
      - name: Add Android tools to PATH
        run: echo "PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH" >> $GITHUB_ENV

      # Flutter dependencies
      - name: Flutter pub get
        run: flutter pub get

      # Setup Firebase google-services.json
      - name: Setup Firebase config
        run: |
          mkdir -p android/app
          echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > android/app/google-services.json

      # Generate firebase_options.dart safely
      - name: Generate firebase_options.dart
        run: |
          mkdir -p lib
          cat > lib/firebase_options.dart << 'EOF'
import 'package:firebase_core/firebase_core.dart';

class DefaultFirebaseOptions {
  static const FirebaseOptions currentPlatform = FirebaseOptions(
    apiKey: "YOUR_API_KEY",
    appId: "YOUR_APP_ID",
    messagingSenderId: "YOUR_MESSAGING_SENDER_ID",
    projectId: "YOUR_PROJECT_ID",
    storageBucket: "YOUR_STORAGE_BUCKET",
  );
}
EOF

          # Replace placeholders with values from GOOGLE_SERVICES_JSON
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" > temp.json
          API_KEY=$(jq -r '.client[0].api_key[0].current_key' temp.json)
          APP_ID=$(jq -r '.client[0].client_info.mobilesdk_app_id' temp.json)
          MSG_ID=$(jq -r '.project_info.project_number' temp.json)
          PROJ_ID=$(jq -r '.project_info.project_id' temp.json)
          STORAGE=$(jq -r '.project_info.storage_bucket' temp.json)

          sed -i "s/YOUR_API_KEY/$API_KEY/" lib/firebase_options.dart
          sed -i "s/YOUR_APP_ID/$APP_ID/" lib/firebase_options.dart
          sed -i "s/YOUR_MESSAGING_SENDER_ID/$MSG_ID/" lib/firebase_options.dart
          sed -i "s/YOUR_PROJECT_ID/$PROJ_ID/" lib/firebase_options.dart
          sed -i "s/YOUR_STORAGE_BUCKET/$STORAGE/" lib/firebase_options.dart
          rm temp.json

      # Build APK release
      - name: Build APK Release
        run: flutter build apk --release --no-sound-null-safety

      # Upload APK artifact
      - uses: actions/upload-artifact@v4
        with:
          name: flutter_pos_apk
          path: build/app/outputs/flutter-apk/app-release.apk
