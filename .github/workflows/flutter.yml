name: Build Flutter APK

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-apk:
    runs-on: ubuntu-latest

    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      FLUTTER_ROOT: /opt/hostedtoolcache/flutter/stable
      PUB_CACHE: /home/runner/.pub-cache

    steps:
      - uses: actions/checkout@v4

      # Setup Flutter
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.3"

      # Install Android SDK command line tools
      - name: Install Android SDK
        run: |
          mkdir -p $ANDROID_HOME/cmdline-tools
          curl -o commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip -q commandlinetools.zip -d $ANDROID_HOME/cmdline-tools
          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH
          yes | sdkmanager --sdk_root=$ANDROID_HOME --licenses
          sdkmanager --sdk_root=$ANDROID_HOME "platform-tools" "platforms;android-36" "build-tools;36.0.0"
      - name: Add Android tools to PATH
        run: echo "PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH" >> $GITHUB_ENV

      # Flutter dependencies
      - name: Flutter pub get
        run: flutter pub get

      # Setup Firebase google-services.json
      - name: Setup Firebase config
        run: |
          mkdir -p android/app
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" > android/app/google-services.json

      # Generate firebase_options.dart safely
      - name: Generate firebase_options.dart
        run: |
          mkdir -p lib
          cat > lib/firebase_options.dart << 'EOF'
import 'package:firebase_core/firebase_core.dart';

class DefaultFirebaseOptions {
  static const FirebaseOptions currentPlatform = FirebaseOptions(
    apiKey: "REPLACE_API_KEY",
    appId: "REPLACE_APP_ID",
    messagingSenderId: "REPLACE_MESSAGING_SENDER_ID",
    projectId: "REPLACE_PROJECT_ID",
    storageBucket: "REPLACE_STORAGE_BUCKET",
  );
}
EOF

          # Replace placeholders from GOOGLE_SERVICES_JSON using Python (more portable)
          python3 - << 'PYTHON'
import json
import os

data = json.loads(os.environ['GOOGLE_SERVICES_JSON'])
client = data['client'][0]
project = data['project_info']

with open('lib/firebase_options.dart', 'r') as f:
    content = f.read()

content = content.replace('REPLACE_API_KEY', client['api_key'][0]['current_key'])
content = content.replace('REPLACE_APP_ID', client['client_info']['mobilesdk_app_id'])
content = content.replace('REPLACE_MESSAGING_SENDER_ID', project['project_number'])
content = content.replace('REPLACE_PROJECT_ID', project['project_id'])
content = content.replace('REPLACE_STORAGE_BUCKET', project['storage_bucket'])

with open('lib/firebase_options.dart', 'w') as f:
    f.write(content)
PYTHON

      # Build APK release
      - name: Build APK Release
        run: flutter build apk --release --no-sound-null-safety

      # Upload APK artifact
      - uses: actions/upload-artifact@v4
        with:
          name: flutter_pos_apk
          path: build/app/outputs/flutter-apk/app-release.apk
